{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","_this","this","props","songs","map","song","index","react_default","a","createElement","className","key","onClick","selectSong","title","renderList","Component","connect","state","console","log","type","payload","selectedSong","_ref","duration","App","components_SongList","components_SongDetail","combineReducers","arguments","length","undefined","action","ReactDOM","render","es","store","createStore","reducers","components_App","document","querySelector"],"mappings":"8NAGMA,uLACW,IAAAC,EAAAC,KACT,OAAOA,KAAKC,MAAMC,MAAMC,IAAI,SAACC,EAAMC,GAC/B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,GACvBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBE,QAAS,kBAAMZ,EAAKE,MAAMW,WAAWR,KAA3E,WAIJE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACVL,EAAKS,2CAStB,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVT,KAAKc,qBAtBCC,aAoCRC,cARS,SAACC,GAIrB,OADAC,QAAQC,IAAIF,GACL,CACHf,MAAOe,EAAMf,QAGmB,CACpCU,WCvCsB,SAAAR,GAEtB,MAAO,CACHgB,KAAM,gBACNC,QAASjB,KDkCFY,CAEZlB,GEhBYkB,cANS,SAACC,GAErB,MAAO,CACHb,KAAMa,EAAMK,eAGLN,CAtBI,SAAAO,GAAc,IAAXnB,EAAWmB,EAAXnB,KAClB,OAAKA,GAGLc,QAAQC,IAAIf,GAERE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,mBAAWJ,EAAKS,MACZP,EAAAC,EAAAC,cAAA,WADJ,aAEeJ,EAAKoB,YARhBlB,EAAAC,EAAAC,cAAA,8BCcDiB,EAfH,WACR,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACkB,EAAD,OAEJpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACmB,EAAD,UCMLC,cAAgB,CAC7B1B,MAjBmB,WACnB,MAAO,CACL,CAAEW,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,WAAYW,SAAU,QAC/B,CAAEX,MAAO,WAAYW,SAAU,QAC/B,CAAEX,MAAO,qBAAsBW,SAAU,UAa3CF,aAT0B,WAAiC,IAAhCA,EAAgCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,MAAoB,kBAAhBC,EAAOZ,KACFY,EAAOX,QAETC,KCPTW,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IAAWhC,EAAAC,EAAAC,cAAC+B,EAAD,OAAoBC,SAASC,cAAc","file":"static/js/main.1803e99c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { selectSong } from 'actions';\nclass SongList extends Component {\n    renderList() {\n        return this.props.songs.map((song, index) => {\n            return (\n                <div className=\"item\" key={index}>\n                    <div className=\"right floated content\">\n                        <button className=\"ui button primary\" onClick={() => this.props.selectSong(song)}>\n                            Select\n                        </button>\n                    </div>\n                    <div className=\"content\">\n                        {song.title}\n                    </div>\n\n                </div>\n            )\n        })\n    }\n    render() {\n        // console.log(this.props)\n        return (\n            <div className=\"ui divided list\">\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n//mapStateToProps -> We are going to take state object,essentially all data that is inside our redux store and make calculation/computation and eventually show as props\nconst mapStateToProps = (state) => { // We can call it anything we want but as convention we will name is mapStateToProps\n    // console.log(state);\n    // return state;\n    console.log(state)\n    return {\n        songs: state.songs\n    }\n}\nexport default connect(mapStateToProps, {\n    selectSong  //selectSong:selectSong\n})(SongList);\n\n//connect function is returning a function\n\n\n/** REDUX IS NOT MAGIC\n * Redux doesn't automatically detect action cretors being called\n * Redux doesn't automatically detect a function returning an object that is an 'action'\n *\n * */","//Action Creator\nexport const selectSong = song => {\n    // Return an action\n    return {\n        type: 'SONG_SELECTED',\n        payload: song\n    }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SongDetail = ({ song }) => {\n  if (!song) {\n    return <div>Select a Song</div>;\n  }\n  console.log(song);\n  return (\n    <div>\n      <h3>Details for:</h3>\n      <p>\n        Title: {song.title}\n        <br />\n        Duration: {song.duration}\n      </p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  //console.log(\"Song Detail Song\", state)\n  return {\n    song: state.selectedSong\n  };\n};\nexport default connect(mapStateToProps)(SongDetail);\n","import React from 'react'\nimport SongList from \"./SongList\";\nimport SongDetail from './SongDetail';\n\nconst App = () => {\n    return (\n        <div className=\"ui container grid\">\n            <div className=\"ui row\">\n                <div className=\"column eight wide\">\n                    <SongList />\n                </div>\n                <div className=\"column eight wide\">\n                    <SongDetail />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import { combineReducers } from \"redux\";\n\nconst songsReducer = () => {\n  return [\n    { title: \"No Scrubs\", duration: \"4:05\" },\n    { title: \"Macarema\", duration: \"2:30\" },\n    { title: \"All Star\", duration: \"3:15\" },\n    { title: \"I want it that Way\", duration: \"1:45\" }\n  ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === \"SONG_SELECTED\") {\n    return action.payload;\n  }\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSong: selectedSongReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './components/App';\nimport reducers from 'reducers';\n\nReactDOM.render(<Provider store={createStore(reducers)}><App /></Provider>, document.querySelector('#root'))"],"sourceRoot":""}